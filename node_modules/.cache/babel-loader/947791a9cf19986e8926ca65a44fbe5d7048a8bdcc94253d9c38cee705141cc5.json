{"ast":null,"code":"var _jsxFileName = \"D:\\\\xampp\\\\htdocs\\\\react1\\\\basic-react-full\\\\socialapp\\\\src\\\\context\\\\DataContext.jsx\",\n  _s = $RefreshSig$();\nimport { createContext, useState, useEffect } from 'react';\nimport Post from \"../components/Post\";\nimport PostLayout from \"./components/PostLayout\";\nimport Footer from \"../components/Footer\";\nimport { useNavigate } from \"react-router-dom\";\nimport { format } from \"date-fns\";\nimport api from \"../api/posts\";\nimport EditPost from \"../EditPost\";\nimport useWindowSize from \"../hooks/useWindowSize\";\nimport useAxiosFetch from \"../hooks/useAxoisFetch\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataContext = /*#__PURE__*/createContext({});\nexport const DataProvider = ({\n  children\n}) => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [searchResults, setsearchResults] = useState([]);\n  const [postTitle, setPostTitle] = useState(\"\");\n  const [postBody, setPostBody] = useState(\"\");\n  const [editTitle, setEditTitle] = useState(\"\");\n  const [editBody, setEditBody] = useState(\"\");\n  const navigate = useNavigate();\n  const {\n    width\n  } = useWindowSize();\n  const {\n    data,\n    fetchError,\n    isLoading\n  } = useAxiosFetch('http://localhost:3500/posts');\n  useEffect(() => {\n    setPosts(data);\n  }, [data]);\n\n  // useEffect(() => {\n  //   const fetchPosts = async () => {\n  //     try {\n  //       const response = await api.get(\"/posts\");\n  //       setPosts(response.data);\n  //     } catch (err) {\n  //       if (err.response) {\n  //         console.log(err.response.data);\n  //         console.log(err.response.status);\n  //         console.log(err.response.headers);\n  //       } else {\n  //         console.log(`Error: ${err.message}`);\n  //       }\n  //     }\n  //   };\n  //   fetchPosts();\n  // }, []);\n\n  useEffect(() => {\n    const filteredResults = posts.filter(post => post.body.toLowerCase().includes(search.toLowerCase()) || post.title.toLowerCase().includes(search.toLowerCase()));\n    setsearchResults(filteredResults.reverse());\n  }, [posts, search]);\n  const getNextId = () => {\n    const numericIds = posts.map(post => parseInt(post.id)) // convert string ID to number\n    .filter(id => !isNaN(id)); // remove any bad data\n\n    const nextId = numericIds.length ? Math.max(...numericIds) + 1 : 1;\n    return nextId.toString(); // convert back to string\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const id = getNextId().toString();\n    const datetime = format(new Date(), \" MM-dd,yyyy pp\");\n    const newPost = {\n      id,\n      title: postTitle,\n      datetime,\n      body: postBody\n    };\n    try {\n      const response = await api.post(\"/posts\", newPost);\n      const allPosts = [...posts, response.data];\n      setPosts(allPosts);\n      setPostTitle(\"\");\n      setPostBody(\"\");\n      navigate(\"/\");\n    } catch (err) {\n      console.log(`Error: ${err.message}`);\n    }\n  };\n  const handleEdit = async id => {\n    const datetime = format(new Date(), \" MM-dd,yyyy pp\");\n    const updatePost = {\n      id,\n      title: editTitle,\n      datetime,\n      body: editBody\n    };\n    try {\n      const response = await api.put(`/posts/${id}`, updatePost);\n      setPosts(posts.map(post => post.id === id ? {\n        ...response.data\n      } : post));\n      setEditTitle(\"\");\n      setEditBody(\"\");\n      navigate(\"/\");\n    } catch (err) {\n      console.log(`Error: ${err.message}`);\n    }\n  };\n  const handleDelete = async id => {\n    try {\n      await api.delete(`posts/${id}`);\n      const postsList = posts.filter(post => post.id !== id);\n      setPosts(postsList);\n      navigate(\"/\");\n    } catch (err) {\n      console.log(`Error: ${err.message}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(DataContext.Provider, {\n    value: {\n      width,\n      search,\n      setSearch,\n      searchResults,\n      fetchError,\n      isLoading,\n      handleSubmit,\n      postTitle,\n      setPostTitle,\n      postBody,\n      setPostBody,\n      posts,\n      handleEdit,\n      editTitle,\n      setEditTitle,\n      editBody,\n      setEditBody,\n      handleDelete\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 9\n  }, this);\n};\n_s(DataProvider, \"gaPXXO7Cy67qDwLbSNpv8gCVj+w=\", false, function () {\n  return [useNavigate, useWindowSize, useAxiosFetch];\n});\n_c = DataProvider;\nexport default DataContext;\nvar _c;\n$RefreshReg$(_c, \"DataProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","Post","PostLayout","Footer","useNavigate","format","api","EditPost","useWindowSize","useAxiosFetch","jsxDEV","_jsxDEV","DataContext","DataProvider","children","_s","posts","setPosts","search","setSearch","searchResults","setsearchResults","postTitle","setPostTitle","postBody","setPostBody","editTitle","setEditTitle","editBody","setEditBody","navigate","width","data","fetchError","isLoading","filteredResults","filter","post","body","toLowerCase","includes","title","reverse","getNextId","numericIds","map","parseInt","id","isNaN","nextId","length","Math","max","toString","handleSubmit","e","preventDefault","datetime","Date","newPost","response","allPosts","err","console","log","message","handleEdit","updatePost","put","handleDelete","delete","postsList","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/xampp/htdocs/react1/basic-react-full/socialapp/src/context/DataContext.jsx"],"sourcesContent":["import { createContext, useState, useEffect } from 'react';\r\n\r\nimport Post from \"../components/Post\";\r\nimport PostLayout from \"./components/PostLayout\";\r\nimport Footer from \"../components/Footer\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { format } from \"date-fns\";\r\n\r\nimport api from \"../api/posts\";\r\nimport EditPost from \"../EditPost\";\r\nimport useWindowSize from \"../hooks/useWindowSize\";\r\nimport useAxiosFetch from \"../hooks/useAxoisFetch\";\r\n\r\n\r\nconst DataContext = createContext({});\r\n\r\nexport const DataProvider = ({ children }) => {\r\n     const [posts, setPosts] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [searchResults, setsearchResults] = useState([]);\r\n  const [postTitle, setPostTitle] = useState(\"\");\r\n  const [postBody, setPostBody] = useState(\"\");\r\n  const [editTitle, setEditTitle] = useState(\"\");\r\n  const [editBody, setEditBody] = useState(\"\");\r\n  const navigate = useNavigate();\r\n  const {width} = useWindowSize();\r\n  const {data, fetchError, isLoading}= useAxiosFetch('http://localhost:3500/posts');\r\n\r\n  useEffect(() => {\r\n    setPosts(data);\r\n  }, [data]);\r\n\r\n  // useEffect(() => {\r\n  //   const fetchPosts = async () => {\r\n  //     try {\r\n  //       const response = await api.get(\"/posts\");\r\n  //       setPosts(response.data);\r\n  //     } catch (err) {\r\n  //       if (err.response) {\r\n  //         console.log(err.response.data);\r\n  //         console.log(err.response.status);\r\n  //         console.log(err.response.headers);\r\n  //       } else {\r\n  //         console.log(`Error: ${err.message}`);\r\n  //       }\r\n  //     }\r\n  //   };\r\n  //   fetchPosts();\r\n  // }, []);\r\n\r\n  useEffect(() => {\r\n    const filteredResults = posts.filter(\r\n      (post) =>\r\n        post.body.toLowerCase().includes(search.toLowerCase()) ||\r\n        post.title.toLowerCase().includes(search.toLowerCase())\r\n    );\r\n    setsearchResults(filteredResults.reverse());\r\n  }, [posts, search]);\r\n  const getNextId = () => {\r\n    const numericIds = posts\r\n      .map((post) => parseInt(post.id)) // convert string ID to number\r\n      .filter((id) => !isNaN(id)); // remove any bad data\r\n\r\n    const nextId = numericIds.length ? Math.max(...numericIds) + 1 : 1;\r\n    return nextId.toString(); // convert back to string\r\n  };\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const id = getNextId().toString();\r\n    const datetime = format(new Date(), \" MM-dd,yyyy pp\");\r\n    const newPost = { id, title: postTitle, datetime, body: postBody };\r\n    try {\r\n      const response = await api.post(\"/posts\", newPost);\r\n      const allPosts = [...posts, response.data];\r\n      setPosts(allPosts);\r\n      setPostTitle(\"\");\r\n      setPostBody(\"\");\r\n      navigate(\"/\");\r\n    } catch (err) {\r\n      console.log(`Error: ${err.message}`);\r\n    }\r\n  };\r\n  const handleEdit = async (id) => {\r\n    const datetime = format(new Date(), \" MM-dd,yyyy pp\");\r\n    const updatePost = { id, title: editTitle, datetime, body: editBody };\r\n    try {\r\n      const response = await api.put(`/posts/${id}`, updatePost);\r\n      setPosts(\r\n        posts.map((post) => (post.id === id ? { ...response.data } : post))\r\n      );\r\n      setEditTitle(\"\");\r\n      setEditBody(\"\");\r\n      navigate(\"/\");\r\n    } catch (err) {\r\n      console.log(`Error: ${err.message}`);\r\n    }\r\n  };\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      await api.delete(`posts/${id}`);\r\n      const postsList = posts.filter((post) => post.id !== id);\r\n      setPosts(postsList);\r\n      navigate(\"/\");\r\n    } catch (err) {\r\n      console.log(`Error: ${err.message}`);\r\n    }\r\n  };\r\n \r\n    \r\n    return (\r\n        <DataContext.Provider value={{\r\n           width, search,  setSearch, searchResults, fetchError, isLoading,\r\n           handleSubmit, postTitle, setPostTitle, postBody, setPostBody,\r\n           posts, handleEdit, editTitle, setEditTitle, editBody, setEditBody,\r\n           handleDelete\r\n        }}>\r\n            {children}\r\n        </DataContext.Provider>\r\n    )\r\n}\r\n\r\nexport default DataContext;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}